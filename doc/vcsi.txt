*vcsi.txt*	Version Control System Interface

Version 0.0.7
Copyright (C) 2007-2008 kana <http://whileimautomaton.net/>
License: MIT license (see <http://www.opensource.org/licenses/mit-license>)

CONTENTS						*vcsi-contents*

Introduction			|vcsi-introduction|
Interface			|vcsi-interface|
  Commands			  |vcsi-commands|
  Functions			  |vcsi-functions|
  Key Mapings			  |vcsi-key-mappings|
Customizing			|vcsi-customizing|
Bugs				|vcsi-bugs|
ChangeLog			|vcsi-changelog|




==============================================================================
INTRODUCTION						*vcsi-introduction*

This Vim plugin provides interface for several version control systems.  You
will be able to commit, diff and other daily works quickly.  Note that this
plugin doesn't provide interface for commands which are rarely used.

Requirements:
- Vim 7.0 or later.

Supported version control systems:
- git
- svk
- Subversion
- CVS (future)




==============================================================================
INTERFACES						*vcsi-interface*

------------------------------------------------------------------------------
COMMANDS						*vcsi-commands*

							*vcsi-item*
Most of the following commands take zero or more {item}s.
- {item} is a file or directory.
- If {item} is "all", it will be treated as the current directory.
- If no {item} is given for a command, it will be treated as "-" is given.
- If {item} is "-", it will be treated as the file or directory related to the
  current buffer.  If the current buffer is created by one of the
  |vcsi-commands|, |vcsi-functions| or |vcsi-key-mappings|, it will be treated
  as the same {item}s for the such buffer.
- Note that every {item} must be in the same repository.


:VcsiBranchList[!]					*:VcsiBranchList*
	(git only) List local branches.  With "!", list also remote branches.

:VcsiBranchSwitch[!] [{branch-name}]			*:VcsiBranchSwitch*
	(git only) Switche to the branch named {branch-name}.  The branch must
	be existent.  With "!", create new branch named {branch-name}, then
	switch to the branch.  In this case, the branch {branch-name} must not
	be existent.

	If {branch-name} is omitted, start interactive switching.  In this
	mode, branch name completion is available.

:VcsiCommit [item] ...					*:VcsiCommit*
	Open new buffer to edit commit log.
	When the buffer is written, the change of [item]s will be committed.

:[count]VcsiDiff [item [revision]]			*:VcsiDiff*
	Open new buffer to show the difference between the {revision} of
	{item} and the current {item}.

	If {revision} is not given, use the latest revision.
	If {count} is given, use the {count}th previous revision.
	If both of them are given, nothing will happen.

:VcsiInfo [item] ...					*:VcsiInfo*
	Open new buffer to show the information of {item}s.

:[count]VcsiLog	 [item [revision]]			*:VcsiLog*
	Open new buffer to show the commit log of {item} from the {revision}
	to the latest revision.

	If {revision} is not given, use the oldest revision.
	If {count} is given, use the {count}th previous revision.
	If both of them are given, nothing will happen.

:VcsiPropEdit						*:VcsiPropEdit*
	Reserved for the future.

:VcsiRevert [item] ...					*:VcsiRevert*
	Revert the current change of {item}s, recursively.

:VcsiStatus [item] ...					*:VcsiStatus*
	Open new buffer to show the status of {item}s, recursively.


:VcsiDefaultKeyMappings[!]			      *VcsiDefaultKeyMappings*
	Define |vcsi-default-key-mappings|.
	If [!] is specified, this may override existing mappings.


------------------------------------------------------------------------------
FUNCTIONS						*vcsi-functions*

vcsi#branch_list({bang})				*vcsi#branch_list()*
vcsi#branch_switch({bang}, [{branch-name}])		*vcsi#branch_switch()*
vcsi#commit([{item}, ...])				*vcsi#commit()*
vcsi#diff([{item}, [{revision}]])			*vcsi#diff()*
vcsi#info([{item}, ...])				*vcsi#info()*
vcsi#log([{item}, [{revision}]])			*vcsi#log()*
vcsi#propedit()						*vcsi#propedit()*
vcsi#revert([{item}, ...])				*vcsi#revert()*
vcsi#status([{item}, ...])				*vcsi#status()*
	Function version of the corresponding command.
	Return value is not defined.


------------------------------------------------------------------------------
KEY MAPPINGS						*vcsi-key-mappings*

<Plug>(vcsi-branch-list!)			*<Plug>(vcsi-branch-list!)*
<Plug>(vcsi-branch-list)			*<Plug>(vcsi-branch-list)*
<Plug>(vcsi-branch-switch!)			*<Plug>(vcsi-branch-switch!)*
<Plug>(vcsi-branch-switch)			*<Plug>(vcsi-branch-switch)*
<Plug>(vcsi-commit-all)				*<Plug>(vcsi-commit-all)*
<Plug>(vcsi-commit-it)				*<Plug>(vcsi-commit-it)*
<Plug>(vcsi-diff-all)				*<Plug>(vcsi-diff-all)*
<Plug>(vcsi-diff-it)				*<Plug>(vcsi-diff-it)*
<Plug>(vcsi-info-all)				*<Plug>(vcsi-info-all)*
<Plug>(vcsi-info-it)				*<Plug>(vcsi-info-it)*
<Plug>(vcsi-log-all)				*<Plug>(vcsi-log-all)*
<Plug>(vcsi-log-it)				*<Plug>(vcsi-log-it)*
<Plug>(vcsi-propedit-all)			*<Plug>(vcsi-propedit-all)*
<Plug>(vcsi-propedit-it)			*<Plug>(vcsi-propedit-it)*
<Plug>(vcsi-revert-all)				*<Plug>(vcsi-revert-all)*
<Plug>(vcsi-revert-it)				*<Plug>(vcsi-revert-it)*
<Plug>(vcsi-status-all)				*<Plug>(vcsi-status-all)*
<Plug>(vcsi-status-it)				*<Plug>(vcsi-status-it)*
	These mappings are defined for Normal mode.
	Each mapping executes the corresponding command.
	"-all" version executes the corresponding command with "all".
	"-it" version executes the corresponding command with "-".

						*vcsi-default-key-mappings*
The following key mappings will be defined as this plugin is loaded unless
|g:vcsi_no_default_key_mappings| exists.  You can redefine these key mappings
by |:VcsiDefaultKeyMappings|.

	{lhs}			{rhs}
	----------		----------------------- ~
	<Leader>vbL		<Plug>(vcsi-branch-list!)
	<Leader>vbl		<Plug>(vcsi-branch-list)
	<Leader>vbS		<Plug>(vcsi-branch-switch!)
	<Leader>vbs		<Plug>(vcsi-branch-switch)
	<Leader>vC		<Plug>(vcsi-commit-all)
	<Leader>vc		<Plug>(vcsi-commit-it)
	<Leader>vD		<Plug>(vcsi-diff-all)
	<Leader>vd		<Plug>(vcsi-diff-it)
	<Leader>vI		<Plug>(vcsi-info-all)
	<Leader>vi		<Plug>(vcsi-info-it)
	<Leader>vL		<Plug>(vcsi-log-all)
	<Leader>vl		<Plug>(vcsi-log-it)
	<Leader>vR		<Plug>(vcsi-revert-all)
	<Leader>vr		<Plug>(vcsi-revert-it)
	<Leader>vS		<Plug>(vcsi-status-all)
	<Leader>vs		<Plug>(vcsi-status-it)




==============================================================================
CUSTOMIZING						*vcsi-customizing*

g:vcsi_diff_in_commit_logp			*g:vcsi_diff_in_commit_logp*
				number (default: 0)
	Whenever a buffer to edit commit log is created, the result of
	|:VcsiDiff| will be automatically inserted as a comment.

g:vcsi_echo_scriptp				*g:vcsi_echo_scriptp*
				number (default: 1)
	If this value is true, |:echomsg| for every vcs command to be run.

g:vcsi_no_default_key_mappings		      *g:vcsi_no_default_key_mappings*
	See |vcsi-default-key-mappings|.

g:vcsi_open_command				*g:vcsi_open_command*
g:vcsi_open_command_commit			*g:vcsi_open_command_commit*
g:vcsi_open_command_diff			*g:vcsi_open_command_diff*
g:vcsi_open_command_info			*g:vcsi_open_command_info*
g:vcsi_open_command_log				*g:vcsi_open_command_log*
g:vcsi_open_command_propedit			*g:vcsi_open_command_propedit*
g:vcsi_open_command_revert			*g:vcsi_open_command_revert*
g:vcsi_open_command_status			*g:vcsi_open_command_status*
				string (default: 'belowright new')

	Specify the command to open a temporary buffer (and a window for the
	buffer).  These values are used like the following: >

		execute g:vcsi_open_command
<
	If g:vcsi_open_command_{command} exists, use it rather than
	g:vcsi_open_command.

g:vcsi_status_in_commit_logp			*g:vcsi_status_in_commit_logp*
				number (default: 0)
	Whenever a buffer to edit commit log is created, the result of
	|:VcsiStatus| will be automatically inserted as a comment.




==============================================================================
BUGS							*vcsi-bugs*

- |vcsi-commands|: handling [count] is not implemented.

- The following command and corresponding function are not implemented yet:
  - |:VcsiPropEdit|

- |:VcsiCommit|: writing commit log buffer with |:wq| causes closing extra
  window.

- |:VcsiCommit| (git): No message when some conflicts are occured.

- ...




==============================================================================
CHANGELOG						*vcsi-changelog*

0.0.7	2008-05-19T20:16:54+09:00
	- |:VcsiBranchList|: New.
	- |:VcsiBranchSwitch|: New.
	- |:VcsiDiff| (git): Add separators for staged changes and unstaged
	  changes
	- |:VcsiCommit|, |:VcsiDiff|: Add sysntax highlighting for several
	  items.
	- Fix syntax highlighting for buffers to edit commit log.
	- Fix minor bugs.

0.0.6	2008-04-27T12:35:59+09:00
	- |:VcsiDiff| (git): Show also --cached difference.

0.0.5	2008-03-13T21:48:06+09:00
	- |:VcsiRevert| (git): Fix to process a file or directory which name
	  is same as a branch.

0.0.4	2008-02-21T23:21:36+09:00
	- Support git.

0.0.3	2008-02-11T23:38:25+09:00
	- Fix the bug that |E676| happens when a commit log buffer is written.

0.0.2	2008-01-26T02:38:14+09:00
	- Improve the speed to switch between buffers.
	- Modify the meaning of g:vcsi_open_command and other variables (open
	  new window rather than open the specified buffer).

0.0.1	2008-01-13T00:02:47+09:00
	- Fix the bug that most of temporary buffers are marked as modified.
	- Fix the bug that hit-enter prompt is appeared in most of cases.
	- Fix the bug that same temporary buffer is showed in two windows in
	  some cases.
	- Add "diff" syntax for commit log buffers.

0.0	2007-12-29T14:49:35+09:00
	- Initial version.




==============================================================================
vim:tw=78:ts=8:ft=help:norl:
